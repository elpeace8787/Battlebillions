// Firestore — deploy these in Firebase console or CLI
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Public read of *limited* user fields; write only by the user.
    match /users/{uid} {
      allow read: if true; // (or restrict later to only public fields via Cloud Function)
      allow create: if request.auth != null && request.auth.uid == uid;
      allow update, delete: if request.auth != null && request.auth.uid == uid;
    }

    // Username map: key=username, value={uid}
    match /usernames/{name} {
      allow read: if true;
      allow create, update: if request.auth != null
        && request.resource.data.uid == request.auth.uid;
      allow delete: if false; // prevent name squatting churn
    }

    // Battle rooms (signaling)
    match /rooms/{roomId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null
        && (request.auth.uid in request.resource.data.members);
      match /callerCandidates/{doc} { allow read, write: if request.auth != null; }
      match /calleeCandidates/{doc} { allow read, write: if request.auth != null; }
    }

    // Votes (audience) — future
    match /votes/{voteId} {
      allow create: if request.auth != null;
      allow read: if true;
      allow update, delete: if false;
    }
  }
}
